#!/bin/env sh
mkpath="~/Programming/mkchromecast/bin/mkchromecast"
castpath="~/Programming/castnow/index.js"
res=$(xdpyinfo | awk '/dimensions/{print $2}')
choice=$(printf "Local Video\\nLocal Music\\nDesktop\\nYouTube\\nSource URL/Torrent" | dmenu -i -fn "$fontsize" -p "Choose mode")
fontsize=7

ifsub() { \
	echo "$(printf "Automatic\\nCustom" | dmenu -i -fn "$fontsize" -p "Subtitles to use" )"
}

subtitles(){ \
	echo "$(find ~/Videos ~/Downloads -maxdepth 5 | grep .srt | dmenu -i -fn "$fontsize" -l 10 )"
}

pickvideo(){ \
	echo "$(find ~/Videos ~/Downloads -maxdepth 5 | grep -e ".mp4\|.mkv\|.wmv\|.mov\|.avi" | \
		dmenu -i -fn "$fontsize" -l 10 -p "Choose video to stream")"
}
pickmusic(){ \
	echo "$(find ~/Music | grep -e ".m4a\|.mp3\|.ogg\|.flac" | \
		dmenu -i -fn "$fontsize" -l 10 -p "Choose music to stream")"
}
cast(){ \
		if [ "$2" = "It's music, don't ask me for subtitles man" ]; then
			$TERMINAL -e "$castpath" "$1"
		elif [ "$(ifsub)" = "Automatic" ]; then
			$TERMINAL -e "$castpath" "$1"
		else
			$TERMINAL -e "$castpath" "$1" --subtitles "$(subtitles)"
		fi
}

case $choice in
	Desktop) $TERMINAL -e "$mkpath" --hijack --video -s --screencast --resolution "$res" ;;
	YouTube) $TERMINAL -e "$mkpath" --hijack --control --video -s -y "$(xclip -o)" ;;
	Source\ URL/Torrent) cast "$(xclip -o)" ;;
	Local\ Video) cast "$(pickvideo)" ;;
	Local\ Music) cast "$(pickmusic)" "It's music, don't ask me for subtitles man" ;;
esac
